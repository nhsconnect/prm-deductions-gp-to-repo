{
  "swagger": "2.0",
  "info": {
    "description": "GP to Repo Component",
    "version": "1.0.0",
    "title": "GP to Repo"
  },
  "paths": {
    "/health": {
      "get": {
        "tags": [
          "/health"
        ],
        "summary": "Checks health of api",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "Successful retrieval",
            "schema": {
              "$ref": "#/definitions/response"
            }
          },
          "500": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        }
      }
    },
    "/deduction-requests/": {
      "post": {
        "tags": [
          "/deduction-requests"
        ],
        "summary": "Sends PDS patient retrieval and update requests to GP2GP Adaptor",
        "parameters": [
          {
            "in": "body",
            "name": "nhsNumber",
            "description": "NHS Number (must be 10 digits)",
            "schema": {
              "$ref": "#/definitions/deductionRequest"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "No Content"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "503": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/deduction-requests/{conversationId}": {
      "get": {
        "tags": [
          "/deduction-requests/{conversationId}"
        ],
        "summary": "Gets the status of a deduction request",
        "parameters": [
          {
            "in": "path",
            "name": "conversationId",
            "description": "Conversation Id (must be UUID)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully retrieved"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "404": {
            "description": "Conversation ID/Deduction request not found"
          },
          "422": {
            "description": "Validation failed"
          },
          "503": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/deduction-requests/{conversationId}/ehr-message-received": {
      "patch": {
        "tags": [
          "/deduction-requests/{conversationId}/ehr-message-received"
        ],
        "summary": "Update the status of deduction request when EHR is complete",
        "parameters": [
          {
            "in": "path",
            "name": "conversationId",
            "description": "Conversation Id (must be UUID)",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "messageId",
            "description": "Message Id (must be UUID)",
            "schema": {
              "$ref": "#/definitions/ehrMessageReceived"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Deduction Request successfully updated when EHR received"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "404": {
            "description": "Conversation ID/Deduction request not found"
          },
          "422": {
            "description": "Validation failed"
          },
          "503": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/deduction-requests/{conversationId}/pds-update": {
      "patch": {
        "tags": [
          "/deduction-requests/{conversationId}/pds-update"
        ],
        "summary": "Update the status of deduction request when pds has been updated and trigger EHR request",
        "parameters": [
          {
            "in": "path",
            "name": "conversationId",
            "description": "Conversation Id (must be UUID)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "204": {
            "description": "Deduction Request successfully updated and EHR Request sent"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "404": {
            "description": "Conversation ID/Deduction request not found"
          },
          "409": {
            "description": "PDS update request has not been sent yet"
          },
          "422": {
            "description": "Validation failed"
          },
          "503": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    },
    "/health-record-requests/{nhsNumber}": {
      "post": {
        "tags": [
          "/health-record-requests"
        ],
        "summary": "Sends EHR Request",
        "parameters": [
          {
            "in": "path",
            "name": "nhsNumber",
            "description": "NHS Number (must be 10 digits)",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "401": {
            "description": "Authorization header missing"
          },
          "403": {
            "description": "Authorization key invalid"
          },
          "412": {
            "description": "Authorization keys have not been defined"
          },
          "422": {
            "description": "Validation failed"
          },
          "503": {
            "description": "Error",
            "schema": {
              "$ref": "#/definitions/errorResponse"
            }
          }
        },
        "security": [
          {
            "api_key": []
          }
        ]
      }
    }
  },
  "securityDefinitions": {
    "api_key": {
      "type": "apiKey",
      "name": "Authorization",
      "in": "header"
    }
  },
  "definitions": {
    "deductionRequest": {
      "type": "object",
      "properties": {
        "nhsNumber": {
          "type": "string"
        }
      },
      "required": ["nhsNumber"]
    },
    "ehrMessageReceived": {
      "type": "object",
      "properties": {
        "messageId": {
          "type": "string"
        }
      },
      "required": ["messageId"]
    },
    "errorResponse": {
      "type": "object",
      "properties": {
        "errors": {
          "type": "array",
          "description": "error message",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "response": {
      "type": "object",
      "properties": {
        "version": {
          "type": "string",
          "description": "Version number"
        },
        "description": {
          "type": "string",
          "description": "Describes the component"
        },
        "status": {
          "type": "string",
          "description": "Tells you if the service is running"
        },
        "node_env": {
          "type": "string",
          "description": "Environment - local, dev etc."
        }
      }
    }
  }
}