format_version: 4
common:
  plan_certs: &plan_certs
    resources:
      - docker
    artifacts:
      - build:
          source: terraform/certs_deployment.tfplan
          destination: terraform/
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks create_secrets
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan_certs create
  deploy_certs: &deploy_certs
    resources:
      - docker
    tasks:
      - fetch:
          stage: plan_certs
          job: plan
          source: terraform/certs_deployment.tfplan
          destination: terraform/
          is_file: yes
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply_certs

  plan: &plan
    resources:
      - docker
    artifacts:
      - build:
          source: terraform/deployment.tfplan
          destination: terraform/
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan create
  deploy: &deploy
    resources:
      - docker
    tasks:
      - fetch:
          stage: plan
          job: plan
          source: terraform/deployment.tfplan
          destination: terraform/
          is_file: yes
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply
  plan_db: &plan_db
    resources:
      - docker
    artifacts:
      - build:
          source: terraform-db-roles/db-roles.tfplan
          destination: terraform-db-roles/
    tasks:
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_plan_db_roles create
  deploy_db: &deploy_db
    resources:
      - docker
    tasks:
      - fetch:
          stage: plan_db
          job: plan_db
          source: terraform-db-roles/db-roles.tfplan
          destination: terraform-db-roles/
          is_file: yes
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks tf_apply_db_roles
      # Applies permissions for migration_role
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks grant_db_permissions
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks run_db_migrations
      # Applies permissions for application_role for tables created during migration
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks grant_db_permissions
      - exec:
          command: /bin/bash
          arguments:
            - -c
            - ./tasks wait_ecs

pipelines:
  'prm-deductions-gp-to-repo.dev':
    group: deductions
    label_template: '${git[:8]}'
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      app:
        pipeline: prm-deductions-gp-to-repo
        stage: test_docker
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_dev
    environment_variables:
      NHS_ENVIRONMENT: dev
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan_certs:
          clean_workspace: true
          jobs:
            plan: *plan_certs
      - deploy_certs:
          clean_workspace: true
          jobs:
            deploy: *deploy_certs
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          jobs:
            deploy: *deploy
      - plan_db:
          clean_workspace: true
          jobs:
            plan_db: *plan_db
      - deploy_db:
          clean_workspace: true
          jobs:
            deploy_db: *deploy_db
      - functional:
          clean_workspace: true
          jobs:
            test:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_functional


  'prm-deductions-gp-to-repo.test':
    group: deductions
    label_template: '${git[:8]}'
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      dev_env:
        pipeline: prm-deductions-gp-to-repo.dev
        stage: deploy
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_test
    environment_variables:
      NHS_ENVIRONMENT: test
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan_certs:
          clean_workspace: true
          jobs:
            plan: *plan_certs
      - deploy_certs:
          clean_workspace: true
          jobs:
            deploy: *deploy_certs
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          jobs:
            deploy: *deploy
      - plan_db:
          clean_workspace: true
          jobs:
            plan_db: *plan_db
      - deploy_db:
          clean_workspace: true
          jobs:
            deploy_db: *deploy_db
      - functional:
          clean_workspace: true
          jobs:
            test:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_functional

  'prm-deductions-gp-to-repo.pre-prod':
    group: deductions
    label_template: '${git[:8]}'
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      test_env:
        pipeline: prm-deductions-gp-to-repo.test
        stage: deploy
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_pre_prod
    environment_variables:
      NHS_ENVIRONMENT: pre-prod
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan_certs:
          clean_workspace: true
          jobs:
            plan: *plan_certs
      - deploy_certs:
          clean_workspace: true
          jobs:
            deploy: *deploy_certs
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          jobs:
            deploy: *deploy
      - plan_db:
          clean_workspace: true
          jobs:
            plan_db: *plan_db
      - deploy_db:
          clean_workspace: true
          jobs:
            deploy_db: *deploy_db
      - functional:
          clean_workspace: true
          jobs:
            test:
              resources:
                - docker
              tasks:
                - exec:
                    command: /bin/bash
                    arguments:
                      - -c
                      - ./tasks test_functional
  'prm-deductions-gp-to-repo.prod':
    group: deductions
    label_template: '${git[:8]}'
    materials:
      git:
        type: configrepo
        blacklist:
          - docs/**/*.*
      pre-prod_env:
        pipeline: prm-deductions-gp-to-repo.pre-prod
        stage: deploy
      base_infra:
        pipeline: prm-deductions-infra
        stage: deploy_prod
    environment_variables:
      NHS_ENVIRONMENT: prod
    stages:
      - promote_docker_image:
          resources:
            - docker
          clean_workspace: true
          tasks:
            - exec:
                command: /bin/bash
                arguments:
                  - -c
                  - ./tasks promote_docker_image
      - plan_certs:
          clean_workspace: true
          jobs:
            plan: *plan_certs
      - deploy_certs:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            deploy: *deploy_certs
      - plan:
          clean_workspace: true
          jobs:
            plan: *plan
      - deploy:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            deploy: *deploy
      - plan_db:
          clean_workspace: true
          jobs:
            plan_db: *plan_db
      - deploy_db:
          clean_workspace: true
          approval:
            type: manual
            allow_only_on_success: true
          jobs:
            deploy_db: *deploy_db
#      - functional:
#          clean_workspace: true
#          jobs:
#            test:
#              resources:
#                - docker
#              tasks:
#                - exec:
#                    command: /bin/bash
#                    arguments:
#                      - -c
#                      - ./tasks test_functional
